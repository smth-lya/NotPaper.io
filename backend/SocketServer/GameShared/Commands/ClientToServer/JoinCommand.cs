using System;
using System.Net.Sockets;
using System.Numerics;
using GameShared.Commands.ServerToClient;
using GameShared.Entity;
using GameShared.Interfaces;

namespace GameShared.Commands.ClientToServer
{
    public class JoinCommand : IClientToServerCommandHandler
    {
        public ClientToServerEvent CommandType => ClientToServerEvent.JOIN;
        public int PacketSize => 1;

        public static Dictionary<string, int> FieldOffsets { get; protected set; } = new();

        public void ParseFromBytes(byte[] data) { }

        public byte[] ToBytes()
        {
            return new byte[] { (byte)CommandType };
        }

        public async Task Execute(PaperServer server, Socket clientSocket)
        {
            Console.WriteLine("–ò–≥—Ä–æ–∫ —Ö–æ—á–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è...");

            if (server.Players.Count >= server.MaxPlayers)
            {
                Console.WriteLine("–°–µ—Ä–≤–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω. –û—Ç–∫–∞–∑–∞–Ω–æ.");
                return;
            }

            // üî• –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π `PlayerId`
            int newPlayerId = server.GeneratePlayerId();

            // üî• –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            Random rnd = new Random();
            float startX = rnd.Next(0, 100);
            float startZ = rnd.Next(0, 100);

            Vector2[] possibleDirections = { new Vector2(0, 1), new Vector2(0, -1), new Vector2(1, 0), new Vector2(-1, 0) };
            Vector2 startDirection = possibleDirections[rnd.Next(possibleDirections.Length)];

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
            var player = new Player(newPlayerId, clientSocket)
            {
                X = startX,
                Z = startZ,
                Direction = startDirection
            };
            server.Players.TryAdd(newPlayerId, player);
            server.PlayerPositions[newPlayerId] = (startX, startZ, startDirection);

            Console.WriteLine($"–ò–≥—Ä–æ–∫ {newPlayerId} –ø–æ–¥–∫–ª—é—á–µ–Ω –Ω–∞ ({startX}, {startZ}) —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º {startDirection}");

            // üî• –û—Ç–ø—Ä–∞–≤–ª—è–µ–º `WELCOME` —Å `PlayerId`, X, Z –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
            var welcomeCommand = new WelcomeCommand(newPlayerId, startX, startZ, startDirection);
            await clientSocket.SendAsync(new ArraySegment<byte>(welcomeCommand.ToBytes()), SocketFlags.None);

            // üî• –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –∏—Ö –ø–æ–∑–∏—Ü–∏–∏
            var requestPositionsCommand = new RequestPositionsCommand();
            await server.Broadcast(requestPositionsCommand.ToBytes());
        }
    }
}
