using System.Net.Sockets;
using GameShared.Commands.ServerToClient;
using GameShared.Entity;
using GameShared.Interfaces;

namespace GameShared.Commands.ClientToServer
{
    public class JoinCommand : IClientToServerCommandHandler
    {
        public ClientToServerEvent CommandType => ClientToServerEvent.JOIN;
        public int PacketSize => 1; // 1 –±–∞–π—Ç - –∫–æ–º–∞–Ω–¥–∞ (–±–µ–∑ PlayerId)

        public static Dictionary<string, int> FieldOffsets { get; protected set; } = new();

        public void ParseFromBytes(byte[] data) { }

        public byte[] ToBytes()
        {
            byte[] result = new byte[PacketSize];
            result[0] = (byte)CommandType;
            return result;
        }

        public async Task Execute(PaperServer server, Socket clientSocket)
        {
            Console.WriteLine("–ò–≥—Ä–æ–∫ —Ö–æ—á–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è...");

            if (server.Players.Count >= server.MaxPlayers)
            {
                Console.WriteLine("–°–µ—Ä–≤–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω. –û—Ç–∫–∞–∑–∞–Ω–æ.");
                return;
            }

            // üî• –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π `PlayerId`
            int newPlayerId = server.GeneratePlayerId();

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
            var player = new Player(newPlayerId, clientSocket);
            server.Players.TryAdd(newPlayerId, player);

            Console.WriteLine($"–ò–≥—Ä–æ–∫ {newPlayerId} –ø–æ–¥–∫–ª—é—á–µ–Ω!");

            // üî• –û—Ç–ø—Ä–∞–≤–ª—è–µ–º `WELCOME` —Å `PlayerId`
            var welcomeCommand = new WelcomeCommand(newPlayerId);
            await clientSocket.SendAsync(new ArraySegment<byte>(welcomeCommand.ToBytes()), SocketFlags.None);

            // üî• –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –æ –Ω–æ–≤–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
            var playerJoinCommand = new PlayerJoinCommand(newPlayerId);
            await server.Broadcast(playerJoinCommand.ToBytes());
        }
    }
}